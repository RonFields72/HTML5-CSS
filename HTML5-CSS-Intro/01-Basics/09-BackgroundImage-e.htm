<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Background Image</title>
</head>
<body style="background-image: url('../Images/Haystack.jpg'); background-repeat: no-repeat;
  background-position: right top; background-attachment: fixed; margin-right: 12em;">
  <h1>
    Haystack Code Generator</h1>
  <p>
    The Haystack Code Generator for .NET allows developers to create Entity and Data
    classes to perform all CRUD actions against a database engine such as SQL Server
    or Oracle. Haystack generates classes to call stored procedures, views, even XML
    files. In addition it will generate ASP.NET, WPF and Silverlight user controls and
    much more!</p>
  <h2>
    Create Applications Quick</h2>
  <p>
    When you generate code your applications will get done faster! You also eliminate
    a lot of testing that you have to do with hand written code.</p>
  <p>
    Haystack is a template-driven code generator, meaning you can modify how the code
    is generated by customizing pre-defined templates and by creating your own templates.
  </p>
  <h1>
    XAML Screens in Seconds</h1>
  <p>
    Struggling to develop standard add/edit/delete XAML screens? Haystack will generate
    them for you. We have pre-built templates that will get you started immediately!</p>
  <h1>
    The Best Data and Validation System</h1>
  <p>
    Our data model and validation system will generate classes that allow you to create
    a Service-Oriented and N-Tier architecture quickly and easily. Right out of the
    box you get all this!</p>
  <ul>
    <li>Data Transfer/Entity object (useful for WCF applications)</li>
    <li>Validation class (automatic generation of validation rules picked up from your
      database table)</li>
    <li>Business logic class (a place for you to add your own custom validation rules)</li>
    <li>Data access class (Create, Read, Update, Delete logic)</li>
    <li>Manager class to bring all the above into one easy to use API</li>
    <li>CRUD Stored Procedure generation</li>
    <li>WPF Add, Edit, Delete User Controls</li>
    <li>Silverlight Add, Edit, Delete User Controls</li>
    <li>ASP.NET Add, Edit, Delete MVC and Web Form Pages</li>
    <li>WCF Service Layer for CRUD</li>
    <li>View Model Class for the UI</li>
    <li>Data Provider Layer to switch database engines quickly and easily</li>
  </ul>
  <h1>
    Haystack Architecture Overview</h1>
  <img src="../Images/HaystackArchitecture.png" alt="Haystack Architecture" />
  <p>
    Haystack provides a unique, flexible approach to data access, validation and business
    logic. Using the templates provided with Haystack, the tool creates an Entity class
    (or Data Transfer class) that just represents data (no methods), a set of data access
    classes that are used to populate that entity class, and a set of validation classes
    used to validate the data in the Entity class prior to submitting the data to the
    database.</p>
</body>
</html>
